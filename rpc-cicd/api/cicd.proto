syntax = "proto3";

package api;

option go_package = "github.com/hatlonely/go-rpc/rpc-cicd/api/gen/go/api";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "gogoproto/gogo.proto";
option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_sizecache_all) = false;

message ScriptTemplate {
  string language = 1;
  string script = 2;
}

message Template {
  string id = 1 [(gogoproto.moretags) = "bson:\"_id,omitempty\""];
  string name = 2 [(gogoproto.moretags) = "bson:\"name,omitempty\""];
  string description = 3 [(gogoproto.moretags) = "bson:\"description,omitempty\""];
  string type = 4 [(gogoproto.moretags) = "bson:\"type,omitempty\""];
  string category = 5 [(gogoproto.moretags) = "bson:\"category,omitempty\""];
  ScriptTemplate scriptTemplate = 6 [(gogoproto.moretags) = "bson:\"scriptTemplate,omitempty\""];
}

message GetTemplateReq {
  string id = 1;
}

message DelTemplateReq {
  string id = 1;
}

message PutTemplateReq {
  Template template = 1;
}

message UpdateTemplateReq {
  Template template = 1;
}

message ListTemplateReq {
  int64 offset = 1;
  int64 limit = 2;
}

message ListTemplateRes {
  repeated Template templates = 1;
}

message Variable {
  string id = 1 [(gogoproto.moretags) = "bson:\"_id,omitempty\""];
  string name = 2 [(gogoproto.moretags) = "bson:\"name,omitempty\""];
  string description = 3 [(gogoproto.moretags) = "bson:\"description,omitempty\""];
  string kvs = 4 [(gogoproto.moretags) = "bson:\"kvs,omitempty\""];
}

message GetVariableReq {
  string id = 1;
}

message DelVariableReq {
  string id = 1;
}

message PutVariableReq {
  Variable variable = 1;
}

message UpdateVariableReq {
  Variable variable = 1;
}

message ListVariableReq {
  int64 offset = 1;
  int64 limit = 2;
}

message ListVariableRes {
  repeated Variable variables = 1;
}

message Task {
  string id = 1 [(gogoproto.moretags) = "bson:\"_id,omitempty\""];
  string name = 2 [(gogoproto.moretags) = "bson:\"name,omitempty\""];
  string description = 3 [(gogoproto.moretags) = "bson:\"description,omitempty\""];
  string templateID = 4 [(gogoproto.moretags) = "bson:\"templateID,omitempty\""];
  repeated string variableIDs = 5 [(gogoproto.moretags) = "bson:\"variableIDs,omitempty\""];
}

message GetTaskReq {
  string id = 1;
}

message DelTaskReq {
  string id = 1;
}

message PutTaskReq {
  Task task = 1;
}

message UpdateTaskReq {
  Task task = 1;
}

message ListTaskReq {
  int64 offset = 1;
  int64 limit = 2;
}

message ListTaskRes {
  repeated Task tasks = 1;
}

message RunTaskReq {
  string taskID = 1;
}

message RunTaskRes {
  string jobID = 1;
  string exitCode = 2;
  string stdout = 3;
  string stderr = 4;
}

service CICDService {
  rpc RunTask(RunTaskReq) returns (RunTaskRes) {
    option (google.api.http) = {
      post: "/v1/runTask"
      body: "*"
    };
  }

  rpc GetTask(GetTaskReq) returns (Task) {
    option (google.api.http) = {
      get: "/v1/task/{id}"
    };
  }

  rpc DelTask(DelTaskReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/task/{id}"
    };
  }

  rpc PutTask(PutTaskReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/task"
      body: "task"
    };
  }

  rpc UpdateTask(UpdateTaskReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/task/{task.id}"
      body: "task"
    };
  }

  rpc ListTask(ListTaskReq) returns (ListTaskRes) {
    option (google.api.http) = {
      get: "/v1/listTask"
    };
  }

  rpc GetTemplate(GetTemplateReq) returns (Template) {
    option (google.api.http) = {
      get: "/v1/template/{id}"
    };
  }

  rpc DelTemplate(DelTemplateReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/template/{id}"
    };
  }

  rpc PutTemplate(PutTemplateReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/template"
      body: "template"
    };
  }

  rpc UpdateTemplate(UpdateTemplateReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/template/{template.id}"
      body: "template"
    };
  }

  rpc ListTemplate(ListTemplateReq) returns (ListTemplateRes) {
    option (google.api.http) = {
      get: "/v1/listTemplate"
    };
  }

  rpc GetVariable(GetVariableReq) returns (Variable) {
    option (google.api.http) = {
      get: "/v1/variable/{id}"
    };
  }

  rpc DelVariable(DelVariableReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/variable/{id}"
    };
  }

  rpc PutVariable(PutVariableReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/variable"
      body: "variable"
    };
  }

  rpc UpdateVariable(UpdateVariableReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/variable/{variable.id}"
      body: "variable"
    };
  }

  rpc ListVariable(ListVariableReq) returns (ListVariableRes) {
    option (google.api.http) = {
      get: "/v1/listVariable"
    };
  }
}

